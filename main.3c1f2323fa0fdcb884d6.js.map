{"version":3,"sources":["webpack:///./components/MotherBD.js"],"names":["timerContainer","document","createElement","classList","add","titleH2","textContent","appendChild","timerDiv","id","fields","labels","forEach","field","index","fieldDiv","valueSpan","setAttribute","labelSpan","length","dotsDiv","innerHTML","getElementById","refs","days","querySelector","hours","minutes","seconds","pad","value","String","padStart","e","prevDays","prevHours","prevMins","prevSecs","setInterval","today","Date","targetDate","setFullYear","getFullYear","time","Math","floor","mins","secs"],"mappings":"4MACA,MAAMA,EAAiBC,SAASC,cAAc,OAC9CF,EAAeG,UAAUC,IAAI,mBAE7B,MAAMC,EAAUJ,SAASC,cAAc,MACvCG,EAAQF,UAAUC,IAAI,SACtBC,EAAQC,YAAc,2BACtBN,EAAeO,YAAYF,GAE3B,MAAMG,EAAWP,SAASC,cAAc,OACxCM,EAASL,UAAUC,IAAI,SACvBI,EAASC,GAAK,UAEd,MAAMC,EAAS,CAAC,OAAQ,QAAS,OAAQ,QACnCC,EAAS,CAAC,OAAQ,QAAS,UAAW,WAE5CD,EAAOE,QAAQ,CAACC,EAAOC,KACrB,MAAMC,EAAWd,SAASC,cAAc,OACxCa,EAASZ,UAAUC,IAAI,SAEvB,MAAMY,EAAYf,SAASC,cAAc,QACzCc,EAAUb,UAAUC,IAAI,SACxBY,EAAUC,aAAa,aAAcJ,GACrCG,EAAUV,YAAc,KAExB,MAAMY,EAAYjB,SAASC,cAAc,QAOzC,GANAgB,EAAUf,UAAUC,IAAI,SACxBc,EAAUZ,YAAcK,EAAOG,GAE/BC,EAASR,YAAYS,GACrBD,EAASR,YAAYW,GAEjBJ,EAAQJ,EAAOS,OAAS,EAAG,CAC7B,MAAMC,EAAUnB,SAASC,cAAc,OACvCkB,EAAQjB,UAAUC,IAAI,QACtBgB,EAAQC,UAAY,kCACpBN,EAASR,YAAYa,GAGvBZ,EAASD,YAAYQ,KAGvBf,EAAeO,YAAYC,GAGVP,SAASqB,eAAe,OAChCf,YAAYP,GAErB,MAAMuB,EAAO,CACXC,KAAMvB,SAASwB,cAAc,2BAC7BC,MAAOzB,SAASwB,cAAc,4BAC9BE,QAAS1B,SAASwB,cAAc,2BAChCG,QAAS3B,SAASwB,cAAc,4BAGlC,SAASI,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAGnC,IAGA,SAAwBC,GACtB,IAAIC,EAAW,KACXC,EAAY,KACZC,EAAW,KACXC,EAAW,KAEfC,YAAY,KACV,MAAMC,EAAQ,IAAIC,KACZC,EAAa,IAAID,KAAKP,EAAEQ,YAC9BA,EAAWC,YAAYH,EAAMI,eAEzBJ,EAAQE,GACVA,EAAWC,YAAYH,EAAMI,cAAgB,GAG/C,MAAMC,EAAOH,EAAaF,EACpBf,EAAOqB,KAAKC,MAAMF,EAAO,OACzBlB,EAAQmB,KAAKC,MAAOF,EAAO,MAAqB,MAChDG,EAAOF,KAAKC,MAAOF,EAAO,KAAgB,KAC1CI,EAAOH,KAAKC,MAAOF,EAAO,IAAe,KAE3CpB,IAASU,IACPV,GAAQ,EACVD,EAAKC,KAAKH,UAAYU,OAAOP,GAAMQ,SAAS,EAAG,KACtCR,EAAO,GAAKA,GAAQ,GAC7BD,EAAKC,KAAKH,UAAYU,OAAOP,GAAMQ,SAAS,EAAG,KACtCR,EAAO,KAChBD,EAAKC,KAAKH,UAAYU,OAAOP,GAAMQ,SAAS,EAAG,MAEjDE,EAAWV,GAGTE,IAAUS,IACZZ,EAAKG,MAAML,UAAYQ,EAAIH,GAC3BS,EAAYT,GAGVqB,IAASX,IACXb,EAAKI,QAAQN,UAAYQ,EAAIkB,GAC7BX,EAAWW,GAGTC,IAASX,IACXd,EAAKK,QAAQP,UAAYQ,EAAImB,GAC7BX,EAAWW,IAEZ,KAjDL,CAAmB,CACjBP,WAAY,IAAID,KAAK,kB","file":"main.3c1f2323fa0fdcb884d6.js","sourcesContent":["// Create elements\r\nconst timerContainer = document.createElement('div');\r\ntimerContainer.classList.add('timer-container');\r\n\r\nconst titleH2 = document.createElement('h2');\r\ntitleH2.classList.add('title');\r\ntitleH2.textContent = \"Until my mom's birthday:\";\r\ntimerContainer.appendChild(titleH2);\r\n\r\nconst timerDiv = document.createElement('div');\r\ntimerDiv.classList.add('timer');\r\ntimerDiv.id = 'timer-1';\r\n\r\nconst fields = ['days', 'hours', 'mins', 'secs'];\r\nconst labels = ['Days', 'Hours', 'Minutes', 'Seconds'];\r\n\r\nfields.forEach((field, index) => {\r\n  const fieldDiv = document.createElement('div');\r\n  fieldDiv.classList.add('field');\r\n\r\n  const valueSpan = document.createElement('span');\r\n  valueSpan.classList.add('value');\r\n  valueSpan.setAttribute('data-value', field);\r\n  valueSpan.textContent = '11';\r\n\r\n  const labelSpan = document.createElement('span');\r\n  labelSpan.classList.add('label');\r\n  labelSpan.textContent = labels[index];\r\n\r\n  fieldDiv.appendChild(valueSpan);\r\n  fieldDiv.appendChild(labelSpan);\r\n\r\n  if (index < fields.length - 1) {\r\n    const dotsDiv = document.createElement('div');\r\n    dotsDiv.classList.add('dots');\r\n    dotsDiv.innerHTML = '<span class=\"too-dots\">:</span>';\r\n    fieldDiv.appendChild(dotsDiv);\r\n  }\r\n\r\n  timerDiv.appendChild(fieldDiv);\r\n});\r\n\r\ntimerContainer.appendChild(timerDiv);\r\n\r\n// Append to the document body or any other desired location\r\nconst appWrapp = document.getElementById('app');\r\nappWrapp.appendChild(timerContainer);\r\n\r\nconst refs = {\r\n  days: document.querySelector('span[data-value=\"days\"]'),\r\n  hours: document.querySelector('span[data-value=\"hours\"]'),\r\n  minutes: document.querySelector('span[data-value=\"mins\"]'),\r\n  seconds: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nnew CountdownTimer({\r\n  targetDate: new Date('May 29 2021'),\r\n});\r\nfunction CountdownTimer(e) {\r\n  let prevDays = null;\r\n  let prevHours = null;\r\n  let prevMins = null;\r\n  let prevSecs = null;\r\n\r\n  setInterval(() => {\r\n    const today = new Date();\r\n    const targetDate = new Date(e.targetDate);\r\n    targetDate.setFullYear(today.getFullYear());\r\n\r\n    if (today > targetDate) {\r\n      targetDate.setFullYear(today.getFullYear() + 1);\r\n    }\r\n\r\n    const time = targetDate - today;\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n    if (days !== prevDays) {\r\n      if (days <= 9) {\r\n        refs.days.innerHTML = String(days).padStart(1, '0');\r\n      } else if (days > 9 && days <= 99) {\r\n        refs.days.innerHTML = String(days).padStart(2, '0');\r\n      } else if (days > 99) {\r\n        refs.days.innerHTML = String(days).padStart(3, '0');\r\n      }\r\n      prevDays = days;\r\n    }\r\n\r\n    if (hours !== prevHours) {\r\n      refs.hours.innerHTML = pad(hours);\r\n      prevHours = hours;\r\n    }\r\n\r\n    if (mins !== prevMins) {\r\n      refs.minutes.innerHTML = pad(mins);\r\n      prevMins = mins;\r\n    }\r\n\r\n    if (secs !== prevSecs) {\r\n      refs.seconds.innerHTML = pad(secs);\r\n      prevSecs = secs;\r\n    }\r\n  }, 1000);\r\n}\r\n\r\n\r\n"],"sourceRoot":""}